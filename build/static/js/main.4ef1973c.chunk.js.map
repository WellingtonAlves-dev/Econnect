{"version":3,"sources":["Components/1.png","Components/2.png","Components/3.gif","Components/Servidor.jsx","App.js","index.js"],"names":["portscanner","window","require","Servidor","servidorInfo","useState","status","setStatus","useEffect","setInterval","checkPortStatus","port","ip","error","statusPort","nome","style","color","src","loading","connect","disconnect","maxHeight","App","className","map","servidor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gLAAe,MAA0B,8BCA1B,MAA0B,8BCA1B,MAA0B,8B,OCInCA,EAAcC,OAAOC,QAAQ,eAqDpBC,GApDEF,OAAOC,QAAQ,iBACnBD,OAAOC,QAAQ,QACX,SAAC,GAAoB,IAAnBE,EAAkB,EAAlBA,aACf,EAA4BC,mBAASD,EAAaE,QAAlD,mBAAOA,EAAP,KAAeC,EAAf,KACA,EAA4CF,oBAAS,GAArD,6BAoBA,OAnBAG,qBAAU,WACNC,aAAY,WACRT,EAAYU,gBAAgBN,EAAaO,KAAMP,EAAaQ,IAAI,SAASC,EAAOC,GAE3D,QAAdA,EACc,WAAVR,GACCC,EAAU,WAID,cAAVD,GACCC,EAAU,mBAKxB,OACH,IAGC,gCACI,6BAEmB,SAAXD,EAEA,mCACCF,EAAaW,OAGC,YAAXT,EAEA,qCACCF,EAAaW,KADd,MACsB,sBAAMC,MAAO,CAACC,MAAO,SAArB,mBAGtB,qCACCb,EAAaW,KADd,MACsB,sBAAMC,MAAO,CAACC,MAAO,OAArB,sBAKlC,qBAAKC,IAAgB,SAAXZ,EAAoBa,EAAqB,YAAXb,EAAuBc,EAAUC,EAAYL,MAAO,CAACM,UAAW,WACxG,6BAAKlB,EAAaQ,UClBfW,MAhCf,WAuBE,OACA,qBAAKC,UAAU,YAAf,SAtBmB,CACjB,CACET,KAAM,iBACNH,GAAI,eACJD,KAAM,IACNL,OAAQ,QAEV,CACES,KAAM,MACNH,GAAI,cACJD,KAAM,IACNL,OAAQ,QAEV,CACES,KAAM,SACNH,GAAI,cACJD,KAAM,IACNL,OAAQ,SAMCmB,KAAI,SAACC,GACZ,OAAO,cAAC,EAAD,CAAUtB,aAAcsB,GAAeA,EAASd,UCvB/De,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.4ef1973c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/1.9af09a42.png\";","export default __webpack_public_path__ + \"static/media/2.8f8b6277.png\";","export default __webpack_public_path__ + \"static/media/3.9311ef52.gif\";","import { useEffect, useState } from \"react\";\nimport connect from \"./1.png\";\nimport disconnect from \"./2.png\";\nimport loading from \"./3.gif\";\nconst portscanner = window.require(\"portscanner\");\nconst notifier = window.require('node-notifier');\nconst path = window.require(\"path\");\nconst Servidor = ({servidorInfo}) => {\n    const [status, setStatus] = useState(servidorInfo.status);\n    const [statusAnterior, setStatusAnterior] = useState(false);\n    useEffect(() => {\n        setInterval(() => {\n            portscanner.checkPortStatus(servidorInfo.port, servidorInfo.ip, function(error, statusPort) {\n                // Status is 'open' if currently in use or 'closed' if available\n                if(statusPort == \"open\") {\n                    if(status != \"connect\") {\n                        setStatus(\"connect\");\n                    }\n                }\n                else {\n                    if(status != \"disconnect\") {\n                        setStatus(\"disconnect\");\n                    }\n                }\n            })\n        }\n        , 500);\n    }, []);\n\n    return (\n        <div>\n            <h1>\n                {\n                    status === \"test\"\n                    ?\n                    <>\n                    {servidorInfo.nome}\n                    </>\n                    :\n                        status === \"connect\"\n                        ?\n                        <>\n                        {servidorInfo.nome} - <span style={{color: 'green'}}>ON</span>\n                        </>\n                        :\n                        <>\n                        {servidorInfo.nome} - <span style={{color: 'red'}}>OFF</span>\n                        </>\n\n                }\n            </h1>\n            <img src={status === \"test\" ? loading : status === \"connect\" ? connect : disconnect} style={{maxHeight: \"400px\"}}/>\n            <h2>{servidorInfo.ip}</h2>\n        </div>\n    )\n}\n\nexport default Servidor;","import Servidor from \"./Components/Servidor\";\n\nfunction App() {\n\n  const servidores = [\n    {\n      nome: \"ADMINISTRATIVO\",\n      ip: \"10.67.150.10\",\n      port: 465,\n      status: \"test\",\n    },\n    {\n      nome: \"NSA\",\n      ip: \"10.67.150.9\",\n      port: 465,\n      status: \"test\",\n    },\n    {\n      nome: \"BACKUP\",\n      ip: \"10.67.150.8\",\n      port: 465,\n      status: \"test\",\n    },\n  ];\n\n  return (\n\t\t<div className='container'>\n\t\t\t{servidores.map((servidor) => {\n        return <Servidor servidorInfo={servidor} key={servidor.ip}/>\n      })}\n\t\t</div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}